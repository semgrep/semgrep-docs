# Name of this GitHub Actions workflow.
name: Update help command

on:
  repository_dispatch:
    types: [new_release]

jobs:
  update-output:
    name: Update `--help` and `--help scan` command output 
    runs-on: ubuntu-latest

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v4
      - name: Checkout new branch named based on latest tag
        run: |
          LATEST_TAG=$(gh release view -R returntocorp/semgrep --json tagName -q .tagName)
          echo "LATEST_TAG=$(gh release view -R returntocorp/semgrep --json tagName -q .tagName)" >> $GITHUB_ENV
          git checkout -b update_help_commands_$LATEST_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run `semgrep --help` and update reference file with output
        run: |
          docker run --rm returntocorp/semgrep:latest semgrep --help | tee src/components/reference/_cli-help-output.md
          sed -i '1i```' src/components/reference/_cli-help-output.md
          echo '```' >> src/components/reference/_cli-help-output.md
      - name: Run `semgrep scan --help` and update reference file with output
        run: |
          docker run --rm returntocorp/semgrep:latest semgrep scan --help | tee src/components/reference/_cli-help-scan-output.md
          sed -i '1i```' src/components/reference/_cli-help-scan-output.md
          echo '```' >> src/components/reference/_cli-help-scan-output.md
      - name: Commit changes, if any
        run: |
            if $(git diff --quiet); then
              echo "No changes made, exiting."
            else
              echo "Committing changes."
              git config user.name github-actions
              git config user.email github-actions@github.com
              git add .
              git commit -m "Updated help command output based on latest Semgrep release"
              git push --set-upstream origin update_help_commands_$LATEST_TAG
              gh pr create --title "Update help command output for Semgrep $LATEST_TAG" --body "This is an automatically generated PR"
            fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
